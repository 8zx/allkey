{"version":3,"sources":["./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/balance.service.ts","./src/app/pipes/balance.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/all-key.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","Github: <a href=\"https://github.com/mingfunwong/all-bitcoin-private-key\">https://github.com/mingfunwong/all-bitcoin-private-key</a>\n\n","import { Component, ChangeDetectorRef, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport BigNumber from 'bignumber.js';\nimport { of as observableOf } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AllKeyService } from '../services/all-key.service';\nimport { IAllKey } from '../types/IAllKey';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  displayedColumns: string[] = [\n    'privateKey',\n    'addressUnCompressed',\n    'addressUnCompressedBalance',\n    'addressUnCompressedReceived',\n    'addressCompressed',\n    'addressCompressedBalance',\n    'addressCompressedReceived',\n  ];\n  data: IAllKey[] = [];\n\n  maxNumber = new BigNumber(\n    'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF',\n    16\n  );\n\n  page = '1';\n  // limitPerPage = 1;\n  limitPerPage = 16;\n  resultsLength = this.maxNumber.toString(10);\n  maxPage = this.maxNumber.dividedBy(this.limitPerPage).toFixed(0);\n\n  isLoadingResults = true;\n  isError = false;\n\n  constructor(\n    private allKeyService: AllKeyService,\n    private cdr: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.getData();\n    this.route.queryParamMap.subscribe((params) => {\n      this.page = params.get('page') || '1';\n      this.getData();\n    });\n  }\n\n  onOlder() {\n    this.page = new BigNumber(this.page).minus(1).toString(10);\n    if (this.page === '0') {\n      this.page = '1';\n    }\n    this.router.navigate(['/home'], { queryParams: { page: this.page } });\n  }\n\n  onNewer() {\n    this.page = new BigNumber(this.page).plus(1).toString(10);\n    if (new BigNumber(this.page).isGreaterThan(this.maxPage)) {\n      this.page = this.maxPage;\n    }\n    this.router.navigate(['/home'], { queryParams: { page: this.page } });\n  }\n\n  getData() {\n    this.isLoadingResults = true;\n    this.data = [];\n    this.allKeyService\n      .getData(this.page, this.limitPerPage)\n      .pipe(\n        map((data) => {\n          this.isLoadingResults = false;\n          this.isError = false;\n          return data;\n        }),\n        catchError((err) => {\n          console.error(err);\n          this.isLoadingResults = false;\n          this.isError = true;\n          return observableOf([]);\n        })\n      )\n      .subscribe((data: IAllKey[]) => (this.data = data));\n  }\n\n  ngAfterViewChecked() {\n    this.cdr.detectChanges();\n  }\n}\n","<div class=\"example-container mat-elevation-z8\">\n  <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isError\">\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    <div class=\"example-rate-limit-reached\" *ngIf=\"isError\">Error.</div>\n  </div>\n\n  <div class=\"example-table-container\">\n    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>id</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.id }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"privateKey\">\n        <th mat-header-cell *matHeaderCellDef>privateKey</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.privateKey }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"addressUnCompressed\">\n        <th mat-header-cell *matHeaderCellDef>addressUnCompressed</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <a\n            mat-button\n            color=\"primary\"\n            href=\"https://btc.com/{{ element.addressUnCompressed }}\"\n            target=\"_blank\"\n            >{{ element.addressUnCompressed }}</a\n          >\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"addressUnCompressedBalance\">\n        <th mat-header-cell *matHeaderCellDef>addressUnCompressedBalance</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{\n            element.addressUnCompressedBalance\n              | balance: element.addressUnCompressed:\"balance\"\n          }}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"addressUnCompressedReceived\">\n        <th mat-header-cell *matHeaderCellDef>addressUnCompressedReceived</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{\n            element.addressUnCompressedReceived\n              | balance: element.addressUnCompressed:\"received\"\n          }}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"addressCompressed\">\n        <th mat-header-cell *matHeaderCellDef>addressCompressed</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <a\n            mat-button\n            color=\"primary\"\n            href=\"https://btc.com/{{ element.addressCompressed }}\"\n            target=\"_blank\"\n            >{{ element.addressCompressed }}</a\n          >\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"addressCompressedBalance\">\n        <th mat-header-cell *matHeaderCellDef>addressCompressedBalance</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{\n            element.addressCompressedBalance\n              | balance: element.addressCompressed:\"balance\"\n          }}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"addressCompressedReceived\">\n        <th mat-header-cell *matHeaderCellDef>addressCompressedReceived</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{\n            element.addressCompressedReceived\n              | balance: element.addressCompressed:\"received\"\n          }}\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n\n    <div class=\"paginator\">\n      <button mat-raised-button (click)=\"onOlder()\">← Older</button>\n      <div>{{ page }} of {{ maxPage }}</div>\n      <button mat-raised-button (click)=\"onNewer()\">Newer →</button>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ISmartbitBalance } from '../types/ISmartbitBalance';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BalanceService {\n  constructor(private _httpClient: HttpClient) {}\n  dataCache: Map<string, ISmartbitBalance> = new Map();\n  requestCache: Map<string, Observable<ISmartbitBalance>> = new Map();\n\n  getBalance(address: string): Observable<ISmartbitBalance> {\n    const requestUrl = `https://api.smartbit.com.au/v1/blockchain/address/${address}`;\n    const dataCache = this.dataCache.get(address);\n\n    if (dataCache) {\n      return new Observable<ISmartbitBalance>((observer) => {\n        observer.next(dataCache);\n      });\n    }\n    const requestCache = this.requestCache.get(address);\n    if (requestCache) {\n      return requestCache;\n    }\n    const obser = this._httpClient.get<ISmartbitBalance>(requestUrl).pipe(\n      shareReplay(1),\n      map((data) => {\n        this.dataCache.set(address, data);\n        return data;\n      })\n    );\n    this.requestCache.set(address, obser);\n\n    return obser;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { BalanceService } from '../services/balance.service';\nimport { ISmartbitBalance } from '../types/ISmartbitBalance';\n\n@Pipe({\n  name: 'balance',\n  pure: false,\n})\nexport class BalancePipe implements PipeTransform {\n  private cachedData: ISmartbitBalance = null;\n  private cachedAddress = '';\n\n  constructor(private balanceService: BalanceService) {}\n\n  transform(value: string, address: string, field: string) {\n    if (!address) {\n      return null;\n    }\n\n    if (address !== this.cachedAddress) {\n      this.cachedAddress = address;\n      this.balanceService\n        .getBalance(address)\n        .subscribe((result) => (this.cachedData = result));\n    }\n\n    let dispalyValue = 'Loading...';\n    if (this.cachedData) {\n      switch (field) {\n        case 'balance':\n          dispalyValue =\n            this.cachedData.address.total.balance_int / Math.pow(10, 8) +\n            ' BTC';\n          break;\n        case 'received':\n          dispalyValue =\n            this.cachedData.address.total.received_int / Math.pow(10, 8) +\n            ' BTC';\n          break;\n      }\n    }\n    return dispalyValue;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'all-key';\n}\n","<mat-toolbar color=\"primary\">\n  <span>All Key</span>\n  <button mat-button routerLink=\"home\">Home</button>\n  <button mat-button routerLink=\"about\">About</button>\n</mat-toolbar>\n\n<main>\n  <router-outlet></router-outlet>\n</main>\n\n<footer>♥ allKey</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AboutComponent } from './about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BalancePipe } from './pipes/balance.pipe';\n\n@NgModule({\n  declarations: [AppComponent, HomeComponent, AboutComponent, BalancePipe],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport BigNumber from 'bignumber.js';\nimport { Observable } from 'rxjs';\nimport { IAllKey } from '../types/IAllKey';\ndeclare var Bitcoin, Crypto;\n@Injectable({\n  providedIn: 'root',\n})\nexport class AllKeyService {\n  constructor() {}\n\n  getData(page: string, limitPerPage: number): Observable<IAllKey[]> {\n    return new Observable<IAllKey[]>((observer) => {\n      const itesm: IAllKey[] = [];\n      const addresses: string[] = [];\n      for (let index = 0; index < limitPerPage; index++) {\n        const id = new BigNumber(page)\n          .minus(1)\n          .multipliedBy(limitPerPage)\n          .plus(index + 1)\n          .toString(16);\n        const addressUnCompressed = this.getAddress(id, false);\n        const addressCompressed = this.getAddress(id, true);\n        const privateKey = this.getPrivateKey(id);\n        addresses.push(addressUnCompressed);\n        addresses.push(addressCompressed);\n        itesm.push({\n          id,\n          privateKey,\n          addressUnCompressed,\n          addressUnCompressedBalance: null,\n          addressUnCompressedReceived: null,\n          addressCompressed,\n          addressCompressedBalance: null,\n          addressCompressedReceived: null,\n        });\n      }\n\n      observer.next(itesm);\n    });\n  }\n\n  private getAddress(id: string, compressed: boolean) {\n    const bytes = Crypto.util.hexToBytes(id);\n    const btcKey = new Bitcoin.ECKey(bytes);\n    btcKey.compressed = compressed;\n    const address = btcKey.getBitcoinAddress().toString();\n    return address;\n  }\n\n  private getPrivateKey(id: string) {\n    const bytes = Crypto.util.hexToBytes(id.toString());\n    const btcKey = new Bitcoin.ECKey(bytes);\n    const privateKey = btcKey.getExportedPrivateKey();\n    return privateKey;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}